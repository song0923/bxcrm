<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="      
           http://www.springframework.org/schema/beans      
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd      
           http://www.springframework.org/schema/context      
           http://www.springframework.org/schema/context/spring-context-3.0.xsd     
           http://www.springframework.org/schema/mvc      
           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<!-- 启动时扫描,过滤掉所有带@Service注解的类 -->
	<!-- <context:component-scan base-package="com.bx"> <context:exclude-filter 
		type="annotation" expression="org.springframework.stereotype.Service" /> 
		</context:component-scan> -->

	<!-- 自动扫描的包名 -->
	<context:component-scan base-package="com.bx"></context:component-scan>

	<!-- 主要作用于@Controller，激活该模式，下面是一种简写形式，完全可以手动配置替代这种简写形式， 它会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter，是spring 
		MVC为@Controllers分发请求所必须的 -->
	<mvc:annotation-driven />

	<!-- 配置js,css等静态文件直接映射到对应的文件夹，不被DispatcherServlet处理 -->
	<mvc:resources mapping="/images/**" location="/WEB-INF/images/"
		cache-period="31556926" />
	<mvc:resources mapping="/js/**" location="/WEB-INF/js/"
		cache-period="31556926" />
	<mvc:resources mapping="/css/**" location="/WEB-INF/css/"
		cache-period="31556926" />
	<mvc:resources mapping="/lib/**" location="/WEB-INF/lib/"
		cache-period="31556926" />


	<!-- jsp页面解析器，当Controller返回XXX字符串时，先通过拦截器，然后该类就会在/WEB-INF/views/目录下，查找XXX.jsp文件 -->
	<!-- <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<property name="prefix" value="/WEB-INF/jsp/" /> <property name="suffix" 
		value=".jsp" /> <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" 
		/> </bean> -->

	<!-- velocity视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">
		<property name="cache" value="true" />
		<!-- velocityConfigurer中已配置目录，此处留空 -->
		<property name="prefix" value="" />
		<property name="suffix" value=".vm" />
		<property name="contentType">
			<value>text/html;charset=utf-8</value>
		</property>
		<property name="toolboxConfigLocation">
			<value>classpath*:/velocity-toolbox.xml</value>
		</property>
		<property name="layoutUrl" value="layout/layout.vm" />
		<property name="allowSessionOverride" value="true" />
		<property name="allowRequestOverride" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="requestContextAttribute" value="rc" />
		<property name="exposeRequestAttributes" value="true" />
	</bean>

	<!-- velocity 配置 -->
	<bean id="velocityConfigurer"
		class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath">
			<value>/WEB-INF/velocity/</value>
		</property>
		<property name="velocityProperties">
			<props>
				<prop key="input.encoding">UTF-8</prop>
				<prop key="output.encoding">UTF-8</prop>
			</props>
		</property>
	</bean>

	<!-- 总错误处理 -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView">
			<value>/WEB-INF/error/500</value>
		</property>
		<property name="defaultStatusCode">
			<value>500</value>
		</property>
		<property name="warnLogCategory">
			<value>org.springframework.web.servlet.handler.SimpleMappingExceptionResolver
			</value>
		</property>
	</bean>


</beans>